../../../main.py --time --scenario=task --experiment=splitRAFDB --tasks=4 --network=cnn --iters=2000 --batch=128 --lr=0.0001 --pretrained-root=RESNET-18 --latent-size=512 --replay=naive-rehearsal --buffer-size=1500 --seed=6618
RAM AT BEGINNING: 0.26116943359375
Latent replay turned off
CUDA is used
RAM BEFORE LOADING DATA: 0.2655220031738281

Preparing the data...
SPLIT RATIO: None
 --> rafdb: 'train'-dataset consisting of 12271 samples
 --> rafdb: 'test'-dataset consisting of 3068 samples
[[0, 1], [2, 3], [4, 5], [6, 7]]
RAM AFTER LOADING DATA: 0.2698860168457031
RAM BEFORE CLASSIFER: 0.2698860168457031
RAM AFTER CLASSIFER: 2.659221649169922
RAM BEFORE PRE-TRAINING 2.659221649169922
RAM AFTER PRE-TRAINING 2.659221649169922
RAM BEFORE GENERATOR: 2.659221649169922
RAM AFTER DECLARING GENERATOR: 2.659221649169922
MACs of model: 10914176
RAM BEFORE REPORTING: 2.6678085327148438

Parameter-stamp...
 --> task:          splitRAFDB4-task
 --> model:         RESNET-18_c8
 --> hyper-params:  i2000-lr0.0001-b128-adam
 --> replay:        naive-rehearsal
splitRAFDB4-task--RESNET-18_c8--i2000-lr0.0001-b128-adam--naive-rehearsal-s6618

----------------------------------------MAIN MODEL----------------------------------------
PretrainedRootClassifier(
  (root): Sequential(
    (0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (5): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (6): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (7): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (8): AdaptiveAvgPool2d(output_size=(1, 1))
  )
  (dropout2): Dropout(p=0.5, inplace=False)
  (fc1): Linear(in_features=512, out_features=128, bias=True)
  (fc2): Linear(in_features=128, out_features=8, bias=True)
)
------------------------------------------------------------------------------------------
--> this network has 11243208 parameters (~11.2 million)
      of which: - learnable: 66696 (~0.1 million)
                - fixed: 11176512 (~11.2 million)
------------------------------------------------------------------------------------------
RAM BEFORE TRAINING: 2.6678085327148438
CPU BEFORE TRAINING: (4.18, 1.89)
INITIALISING GPU TRACKER

Training...
PEAK TRAINING RAM: 3.3906517028808594
Peak mem and init mem: 5044 1264
GPU BEFORE EVALUATION: (19.16304347826087, 3780)
RAM BEFORE EVALUATION: 3.3906517028808594
CPU BEFORE EVALUATION: (846.64, 92.44)


EVALUATION RESULTS:
Precs:  [0.8456057007125891, 0.8247863247863247, 0.7125676488274203, 1.0]

 Precision on test-set:
 - Task 1: 0.8456
 - Task 2: 0.8248
 - Task 3: 0.7126
 - Task 4: 1.0000
=> Average precision over all 4 tasks: 0.8457

=> Total training time = 920.0 seconds

RAM AT THE END: 3.3907203674316406
CPU AT THE END: (849.0, 92.7)
