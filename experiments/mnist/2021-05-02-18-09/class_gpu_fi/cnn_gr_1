../../../../main.py --time --scenario=class --tasks=10 --iters=1000 --network=cnn --latent-size=128 --replay=generative --pretrain-baseline --seed=8544
RAM AT BEGINNING: 0.22391891479492188
Latent replay turned off
CUDA is used
RAM BEFORE LOADING DATA: 0.22851943969726562

Preparing the data...
SPLIT RATIO: [50000, 10000]
 --> mnist: 'train'-dataset consisting of 60000 samples
 --> mnist: 'test'-dataset consisting of 10000 samples
RAM AFTER LOADING DATA: 0.289459228515625
RAM BEFORE CLASSIFER: 0.289459228515625
RAM AFTER CLASSIFER: 2.25677490234375
RAM BEFORE PRE-TRAINING 2.25677490234375
RAM AFTER PRE-TRAINING 2.2730369567871094
RAM BEFORE GENERATOR: 2.2730369567871094
RAM AFTER DECLARING GENERATOR: 2.2730369567871094
MACs of model: 279824
RAM BEFORE REPORTING: 2.2730369567871094

Parameter-stamp...
 --> task:          splitMNIST10-class
 --> model:         CNN_CLASSIFIER_c10
 --> hyper-params:  i1000-lr0.001-b128-adam
 --> replay:        generative-VAE(MLP([1024, 400, 400])--z100-c10)
splitMNIST10-class--CNN_CLASSIFIER_c10--i1000-lr0.001-b128-adam--generative-VAE(MLP([1024, 400, 400])--z100-c10)-s8544

----------------------------------------MAIN MODEL----------------------------------------
CNNClassifier(
  (conv1): Conv2d(1, 5, kernel_size=(5, 5), stride=(1, 1))
  (conv2): Conv2d(5, 5, kernel_size=(5, 5), stride=(1, 1))
  (dropout1): Dropout(p=0.25, inplace=False)
  (dropout2): Dropout(p=0.5, inplace=False)
  (fc0): Linear(in_features=720, out_features=128, bias=True)
  (fc1): Linear(in_features=128, out_features=128, bias=True)
  (fc2): Linear(in_features=128, out_features=10, bias=True)
)
------------------------------------------------------------------------------------------
--> this network has 110850 parameters (~0.1 million)
      of which: - learnable: 17802 (~0.0 million)
                - fixed: 93048 (~0.1 million)
------------------------------------------------------------------------------------------

----------------------------------------GENERATOR----------------------------------------
AutoEncoder(
  (flatten): Flatten()
  (fcE): MLP(
    (fcLayer1): fc_layer(
      (linear): LinearExcitability(in_features=1024, out_features=400)
      (nl): ReLU()
    )
    (fcLayer2): fc_layer(
      (linear): LinearExcitability(in_features=400, out_features=400)
      (nl): ReLU()
    )
  )
  (toZ): fc_layer_split(
    (mean): fc_layer(
      (linear): LinearExcitability(in_features=400, out_features=100)
    )
    (logvar): fc_layer(
      (linear): LinearExcitability(in_features=400, out_features=100)
    )
  )
  (classifier): fc_layer(
    (linear): LinearExcitability(in_features=400, out_features=10)
  )
  (fromZ): fc_layer(
    (linear): LinearExcitability(in_features=100, out_features=400)
    (nl): ReLU()
  )
  (fcD): MLP(
    (fcLayer1): fc_layer(
      (linear): LinearExcitability(in_features=400, out_features=400)
      (nl): ReLU()
    )
    (fcLayer2): fc_layer(
      (linear): LinearExcitability(in_features=400, out_features=1024)
      (nl): Sigmoid()
    )
  )
  (to_image): Reshape(channels = 1)
)
------------------------------------------------------------------------------------------
--> this network has 1265934 parameters (~1.3 million)
      of which: - learnable: 1265934 (~1.3 million)
                - fixed: 0 (~0.0 million)
------------------------------------------------------------------------------------------
RAM BEFORE TRAINING: 2.2730369567871094
CPU BEFORE TRAINING: (45.09, 2.02)
INITIALISING GPU TRACKER

Training...
PEAK TRAINING RAM: 2.274883270263672
Peak mem and init mem: 991 951
GPU BEFORE EVALUATION: (14.962962962962964, 40)
RAM BEFORE EVALUATION: 2.274883270263672
CPU BEFORE EVALUATION: (411.4, 8.38)


EVALUATION RESULTS:

 Precision on test-set:
 - Task 1: 0.8930
 - Task 2: 0.9929
 - Task 3: 0.9624
 - Task 4: 0.9868
 - Task 5: 0.9465
 - Task 6: 0.9176
 - Task 7: 0.9428
 - Task 8: 0.8778
 - Task 9: 0.9807
 - Task 10: 0.9792
=> Average precision over all 10 tasks: 0.9480

=> Total training time = 260.3 seconds

RAM AT THE END: 2.2749099731445312
CPU AT THE END: (413.16, 8.39)
