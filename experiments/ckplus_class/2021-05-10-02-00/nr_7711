../../../main.py --time --scenario=class --experiment=splitCKPLUS --tasks=8 --network=cnn --iters=3000 --batch=32 --lr=0.0001 --latent-size=4096 --vgg-root --replay=naive-rehearsal --buffer-size=1000 --seed=7711
RAM AT BEGINNING: 0.2243804931640625
Latent replay turned off
CUDA is used
RAM BEFORE LOADING DATA: 2.191364288330078

Preparing the data...
SPLIT RATIO: [924, 0]
 --> ckplus: 'train'-dataset consisting of 924 samples
 --> ckplus: 'test'-dataset consisting of 384 samples
RAM AFTER LOADING DATA: 2.19256591796875
RAM BEFORE CLASSIFER: 2.19256591796875
RAM AFTER CLASSIFER: 2.2595367431640625
RAM BEFORE PRE-TRAINING 2.2595367431640625
RAM AFTER PRE-TRAINING 2.2595367431640625
RAM BEFORE GENERATOR: 2.2595367431640625
RAM AFTER DECLARING GENERATOR: 2.2595367431640625
MACs of model: 127374080
RAM BEFORE REPORTING: 2.2653121948242188

Parameter-stamp...
 --> task:          splitCKPLUS8-class
 --> model:         VGG_CLASSIFIER_c8
 --> hyper-params:  i3000-lr0.0001-b32-adam
 --> replay:        naive-rehearsal
splitCKPLUS8-class--VGG_CLASSIFIER_c8--i3000-lr0.0001-b32-adam--naive-rehearsal-s7711

----------------------------------------MAIN MODEL----------------------------------------
VGGClassifier(
  (vgg16): VGG(
    (features): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU(inplace=True)
      (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (5): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (6): ReLU(inplace=True)
      (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (8): ReLU(inplace=True)
      (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (10): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (11): ReLU(inplace=True)
      (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (13): ReLU(inplace=True)
      (14): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (15): ReLU(inplace=True)
      (16): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (17): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (18): ReLU(inplace=True)
      (19): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (20): ReLU(inplace=True)
      (21): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (22): ReLU(inplace=True)
      (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (24): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (25): ReLU(inplace=True)
      (26): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (27): ReLU(inplace=True)
      (28): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (29): ReLU(inplace=True)
      (30): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(7, 7))
    (classifier): Sequential(
      (0): Linear(in_features=25088, out_features=4096, bias=True)
      (1): ReLU(inplace=True)
      (2): Dropout(p=0.5, inplace=False)
      (3): Linear(in_features=4096, out_features=4096, bias=True)
      (4): ReLU(inplace=True)
      (5): Dropout(p=0.5, inplace=False)
      (6): Linear(in_features=4096, out_features=1000, bias=True)
    )
  )
  (dropout2): Dropout(p=0.5, inplace=False)
  (fc1): Linear(in_features=4096, out_features=128, bias=True)
  (fc2): Linear(in_features=128, out_features=8, bias=True)
)
------------------------------------------------------------------------------------------
--> this network has 138882992 parameters (~138.9 million)
      of which: - learnable: 525448 (~0.5 million)
                - fixed: 138357544 (~138.4 million)
------------------------------------------------------------------------------------------
RAM BEFORE TRAINING: 2.266040802001953
CPU BEFORE TRAINING: (34.8, 10.1)
INITIALISING GPU TRACKER

Training...
PEAK TRAINING RAM: 2.2793655395507812
Peak mem and init mem: 5375 2365
GPU BEFORE EVALUATION: (23.575824175824177, 3010)
RAM BEFORE EVALUATION: 2.279388427734375
CPU BEFORE EVALUATION: (4450.36, 445.82)


EVALUATION RESULTS:

 Precision on test-set:
 - Task 1: 0.7963
 - Task 2: 0.2083
 - Task 3: 0.2000
 - Task 4: 0.2000
 - Task 5: 0.6562
 - Task 6: 0.8222
 - Task 7: 0.3750
 - Task 8: 0.8395
=> Average precision over all 8 tasks: 0.5122

=> Total training time = 4544.3 seconds

RAM AT THE END: 2.296253204345703
CPU AT THE END: (4452.32, 446.06)
